import ballerina/http;
import ballerina/openapi;
{{#servers}}
listener http:Listener ep{{@index}} = new({{port}}{{#host}}, config = {host: "{{host}}"}{{/host}});
{{/servers}}

service {{servers.0.basePath}} on {{#servers}}ep{{@index}}{{#unless @last}}, {{/unless}}{{/servers}} {{=<%
%>=}}{<%={{ }}=%>
{{#pathList}}{{#operationsList}}
# {{operationDescription}}
# + caller - Caller client object represents the endpoint
# + req    - Req represents the message which came along over the network
{{#parameterList}}# + {{paramName}} - {{paramDescription}}{{/parameterList}}
{{#requestBody}}# + payload - Request body payload. {{/requestBody}}
# + return - Error value if an error occurred, and return nil otherwise
    resource function {{opMethod}} {{{opName}}}(http:Caller caller, http:Request req
    {{#parameterList}}{{#isQueryParam}}, {{#refType}}{{{refType}}}{{/refType}}{{^refType}}{{#paramType}}{{>inlineSchema}}? {{/paramType}}{{/refType}} {{paramName}}{{/isQueryParam}}{{/parameterList}}{{#requestBody }}, @http:Payload {}{{#requestBody.contentType}} {{> inlineSchema}}{{/requestBody.contentType}}payload{{/requestBody}})returns error?{{=<% %>=}}{<%={{ }}=%>

    }
{{/operationsList}}{{/pathList}}
}