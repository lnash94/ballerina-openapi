/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
 

apply from: "$rootDir/gradle/javaProject.gradle"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

description = 'Ballerina - OpenApi Tooling - OpenApi to Ballerina'

configurations.all {
    resolutionStrategy.preferProjectModules()
}

dependencies {
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.5'
    implementation "com.google.guava:guava:29.0-jre"
    implementation group: 'io.swagger.parser.v3', name: 'swagger-parser-v3'
    implementation ('io.swagger:swagger-core')  {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.yaml', module: 'snakeyaml'
        exclude group: 'com.fasterxml.jackson.datatype', module: 'jackson-datatype-joda'
        exclude group: 'io.swagger', module: 'swagger-annotations'
        exclude group: 'org.slf4j', module: 'slf4j-ext'
    }
    implementation ('io.swagger.core.v3:swagger-core')
    implementation 'io.swagger.core.v3:swagger-models:2.1.4'
    implementation 'io.swagger.parser.v3:swagger-parser-core'
    implementation ('io.swagger.parser.v3:swagger-parser-v2-converter')  {
        exclude group: 'io.swagger', module: 'swagger-compat-spec-parser'
        exclude group: 'org.slf4j', module: 'slf4j-ext'
    }
    implementation 'com.github.jknack:handlebars:4.0.6'
    implementation 'info.picocli:picocli:4.0.1'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.0'

    compile group: 'org.ballerinalang', name: 'language-server', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'language-server-compiler', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'ballerina-tool', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'ballerina-tools-api', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'ballerina-lang', version: "${ballerinaLangVersion}"
    compile group: 'org.ballerinalang', name: 'annotations', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'http-native', version: "${stdlibHttpVersion}"
    compile group: 'com.sun.activation', name: 'javax.activation', version: '1.2.0'

    testCompile group: 'org.testng', name: 'testng', version: "${testngVersion}"
    testCompile group: 'org.ballerinalang', name: 'language-server', version: "${ballerinaLangVersion}"
    testCompile group: 'org.ballerinalang', name: 'language-server-compiler', version: "${ballerinaLangVersion}"
    testCompile group: 'org.testng', name: 'testng', version: "${testngVersion}"
    testCompile 'org.slf4j:slf4j-jdk14'
}

test {
    useTestNG() {
        suites 'src/test/resources/testng.xml'
    }
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            groupId project.group
//            artifactId "openapi-to-ballerina-generator"
//            version = project.version
//            artifact jar
//        }
//    }
//
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            url = uri("https://github.com/ballerina-platform/ballerina-openapi")
//            credentials {
//                username = System.getenv("packageUser")
//                password = System.getenv("packagePAT")
//            }
//        }
//    }
//}
shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        include(dependency('com.github.jknack:handlebars'))
        include(dependency('org.antlr:antlr4:4.5'))
        include(dependency('com.atlassian.commonmark:commonmark'))
        include(dependency('com.atlassian.commonmark:commonmark-ext-gfm-tables'))
        exclude('META-INF/*.SF')
        exclude('META-INF/*.DSA')
        exclude('META-INF/*.RSA')
    }
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}